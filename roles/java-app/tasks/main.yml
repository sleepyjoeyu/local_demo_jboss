---
- name: Include vars of role java-ap
  include_vars:
    file: ../../vars/main.yml
    name: man_vars
- name: Show hostname
  debug:
    msg: "Host is {{ ansible_hostname }}"
- name: Copy application WAR file to host
  copy: 
    src: "{{ man_vars.war_file }}"
    dest: /tmp

- name: Make sure backup is OK
  file:
    path: /root/backup
    state: directory 
- name: Check the same APP_NAME exist or not
  stat:
    path: "{{ jboss_app_deployment_path }}/{{ man_vars.app_name }}.war"
  register: stat_result
- name: Show result for APP_NAME exist or not
  debug:
    var: stat_result
- name: Backup the same APP_NAME war file 
  copy:
    src: "{{ jboss_app_deployment_path }}/{{ man_vars.app_name }}.war"
    dest: "/root/backup/{{ man_vars.app_name }}-{{ ansible_date_time.epoch }}.war"
    remote_src: true
  when: stat_result.stat.exists
- name: Show all variable values
  debug:
    msg: 
    -  "UPGRADE VAULE = {{ man_vars.upgrade }}"
    -  "WAR_FILE VAULE = {{ man_vars.war_file }}"
    -  "APP_NAME VAULE = {{ man_vars.app_name }}"
    -  "APP_NAME VAULE = {{ man_vars.version }}"

- name: Deployment of new application
  jboss:
    deployment: "{{ man_vars.app_name }}.war"
    deploy_path: "{{ jboss_app_deployment_path }}"
    src: "/tmp/{{ man_vars.war_file }}"
    state: present
  when: man_vars.upgrade == False

- name: Upgrade Application-1
  file:
    path: "{{ jboss_app_deployment_path }}/{{ man_vars.app_name }}.war"
    state: absent
  when: man_vars.upgrade == True
- name: Upgrade Application-2
  jboss:
    deployment: "{{ man_vars.app_name }}.war"
    deploy_path: "{{ jboss_app_deployment_path }}"
    src: "/tmp/{{ man_vars.war_file }}"
    state: present
  when: man_vars.upgrade == True
