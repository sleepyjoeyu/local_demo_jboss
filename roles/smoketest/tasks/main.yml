---
- name: prepare
  file:
    path: "{{ report_file }}"
    state: absent
  delegate_to: localhost
- name: Show APP_NAME
  debug:
    msg: 
    - "APP_NAME = {{ app_name }}"
    - "EMAILTO = {{ emailto|default(unknown) }}" 
- name: Check webserver for correct response
  uri:
    url: "http://{{ hostvars[inventory_hostname]['ansible_host'] }}:8080/{{  app_name }}/status.html"
    return_content: yes
  retries: 10
  delay: 1
  register: result
  delegate_to: localhost
  ignore_errors: yes 
 
- name: show result 1
  debug:
    msg: 
      - "{{ inventory_hostname }} service status is OK:"
      - "{{ result.url }}"
      - "{{ result.content }}"
  when: result.status == 200

- name: collect report-1
  local_action: shell /bin/echo -e "{{ inventory_hostname }} service status is OK  \n{{ result.content }}" >> "{{ report_file }}" 
  when: result.status == 200

- name: collect report-2
  local_action: shell /bin/echo -e "{{ inventory_hostname }} service status is  not OK" >> "{{ report_file }}" 
  when: result.status != 200 or result is undefined or result.failed == true

- name: Sending notification email for App deployment
  mail:
    host: smtp.gmail.com
    port: 465
    secure: always 
    username: "{{ username }}" 
    password: "{{ password }}" 
    to: "{{ emailto }}"
    subject: Ansible Report for App Deployment
    body: 
      - '"Application:{{ app_name }} has been successfully deployed with {{ war_file }}"'
    attach:
      -  "{{ report_file }}"
  loop: "{{ emailto }}"
  run_once: true
  when: emailto is defined
  delegate_to: localhost
